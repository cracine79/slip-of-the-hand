/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_example_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/example.js */ \"./src/scripts/example.js\");\n/* harmony import */ var _scripts_word_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/word.js */ \"./src/scripts/word.js\");\n\n\nconsole.log(\"entry point working!\");\n(0,_scripts_example_js__WEBPACK_IMPORTED_MODULE_0__.fn1)();\nlet word = new _scripts_word_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\"jot\");\n// word.allPatternsCompiled();\n\n// fetch(dataMuseUrl)\n//     .then(response => {return response.json()})\n//     .then(data => {console.log(data)})\n\n// console.log(word)\n// console.log(word.KEYBOARD)\n// const chopped = word.toFullPattern()\n// console.log(\"word\")\n// console.log(word.value)\n// console.log(\"left\")\n// console.log(word.toLeftPattern())\n// console.log(\"right pattern\")\n// const rightPattern = word.toRightPattern();\n// console.log(rightPattern);\n\n// let alp = word.allLeftPatterns();\n// let arp = word.allRightPatterns();\n// console.log(arp)\n// console.log(alp)\n\nconsole.log(word.allPatternsCompiled()[0]);\nconsole.log(word.allPossibleSloths());//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7O0FBRzBDO0FBQ047QUFFcENFLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLHNCQUFzQixDQUFDO0FBQ25DSCx3REFBRyxDQUFDLENBQUM7QUFHTCxJQUFJSSxJQUFJLEdBQUcsSUFBSUgsd0RBQUksQ0FBQyxLQUFLLENBQUM7QUFDMUI7O0FBSUE7QUFDQTtBQUNBOztBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUlBO0FBQ0E7QUFDQTtBQUNBOztBQUVBQyxPQUFPLENBQUNDLEdBQUcsQ0FBQ0MsSUFBSSxDQUFDQyxtQkFBbUIsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDMUNILE9BQU8sQ0FBQ0MsR0FBRyxDQUFDQyxJQUFJLENBQUNFLGlCQUFpQixDQUFDLENBQUMsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3NsaXBfb2ZfdGhlX2hhbmQvLi9zcmMvaW5kZXguanM/YjYzNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcblxuXG5pbXBvcnQgeyBmbjEgfSBmcm9tIFwiLi9zY3JpcHRzL2V4YW1wbGUuanNcIlxuaW1wb3J0IFdvcmQgZnJvbSBcIi4vc2NyaXB0cy93b3JkLmpzXCJcblxuY29uc29sZS5sb2coXCJlbnRyeSBwb2ludCB3b3JraW5nIVwiKVxuZm4xKClcblxuXG5sZXQgd29yZCA9IG5ldyBXb3JkKFwiam90XCIpO1xuLy8gd29yZC5hbGxQYXR0ZXJuc0NvbXBpbGVkKCk7XG5cblxuXG4vLyBmZXRjaChkYXRhTXVzZVVybClcbi8vICAgICAudGhlbihyZXNwb25zZSA9PiB7cmV0dXJuIHJlc3BvbnNlLmpzb24oKX0pXG4vLyAgICAgLnRoZW4oZGF0YSA9PiB7Y29uc29sZS5sb2coZGF0YSl9KVxuXG5cblxuLy8gY29uc29sZS5sb2cod29yZClcbi8vIGNvbnNvbGUubG9nKHdvcmQuS0VZQk9BUkQpXG4vLyBjb25zdCBjaG9wcGVkID0gd29yZC50b0Z1bGxQYXR0ZXJuKClcbi8vIGNvbnNvbGUubG9nKFwid29yZFwiKVxuLy8gY29uc29sZS5sb2cod29yZC52YWx1ZSlcbi8vIGNvbnNvbGUubG9nKFwibGVmdFwiKVxuLy8gY29uc29sZS5sb2cod29yZC50b0xlZnRQYXR0ZXJuKCkpXG4vLyBjb25zb2xlLmxvZyhcInJpZ2h0IHBhdHRlcm5cIilcbi8vIGNvbnN0IHJpZ2h0UGF0dGVybiA9IHdvcmQudG9SaWdodFBhdHRlcm4oKTtcbi8vIGNvbnNvbGUubG9nKHJpZ2h0UGF0dGVybik7XG5cblxuXG4vLyBsZXQgYWxwID0gd29yZC5hbGxMZWZ0UGF0dGVybnMoKTtcbi8vIGxldCBhcnAgPSB3b3JkLmFsbFJpZ2h0UGF0dGVybnMoKTtcbi8vIGNvbnNvbGUubG9nKGFycClcbi8vIGNvbnNvbGUubG9nKGFscClcblxuY29uc29sZS5sb2cod29yZC5hbGxQYXR0ZXJuc0NvbXBpbGVkKClbMF0pXG5jb25zb2xlLmxvZyh3b3JkLmFsbFBvc3NpYmxlU2xvdGhzKCkpXG5cblxuXG4iXSwibmFtZXMiOlsiZm4xIiwiV29yZCIsImNvbnNvbGUiLCJsb2ciLCJ3b3JkIiwiYWxsUGF0dGVybnNDb21waWxlZCIsImFsbFBvc3NpYmxlU2xvdGhzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/example.js":
/*!********************************!*\
  !*** ./src/scripts/example.js ***!
  \********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fn1: function() { return /* binding */ fn1; }\n/* harmony export */ });\nconst fn1 = () => {\n  console.log(\"connected!\");\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9leGFtcGxlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFHTyxNQUFNQSxHQUFHLEdBQUdBLENBQUEsS0FBTTtFQUFFQyxPQUFPLENBQUNDLEdBQUcsQ0FBQyxZQUFZLENBQUM7QUFBQyxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2xpcF9vZl90aGVfaGFuZC8uL3NyYy9zY3JpcHRzL2V4YW1wbGUuanM/ZmNlZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcblxuXG5leHBvcnQgY29uc3QgZm4xID0gKCkgPT4geyBjb25zb2xlLmxvZyhcImNvbm5lY3RlZCFcIikgfSA7Il0sIm5hbWVzIjpbImZuMSIsImNvbnNvbGUiLCJsb2ciXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/example.js\n");

/***/ }),

/***/ "./src/scripts/word.js":
/*!*****************************!*\
  !*** ./src/scripts/word.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nconst KEYBOARD = [\"1234567890-=\".split(\"\"), [\"tab\"].concat(\"qwertyuiop[]\".split(\"\")), [\"caps lock\"].concat(\"asdfghjkl;'\".split(\"\")), [\"shift\"].concat(\"zxcvbnm,./\".split(\"\")).concat([\"shift\"]), [\"\", \"\", \"\", \" \", \" \", \" \", \" \", \" \", \" \", \"\", \"\", \"\"]];\nclass Word {\n  KEYBOARD = [\"1234567890-=\".split(\"\"), [\"tab\"].concat(\"qwertyuiop[]\".split(\"\")), [\"caps lock\"].concat(\"asdfghjkl;'\".split(\"\")), [\"shift\"].concat(\"zxcvbnm,./\".split(\"\")).concat([\"shift\"]), [\"\", \"\", \"\", \" \", \" \", \" \", \" \", \" \", \" \", \"\", \"\", \"\"]];\n  DIRS = [[-1, 1], [0, 1], [1, 1], [-1, 0], [0, 0], [-1, 0], [-1, -1], [0, -1], [1, -1]];\n  constructor(value) {\n    this.value = value.toLowerCase();\n    this.positionArr = this.toFullPattern();\n  }\n  toFullPattern() {\n    const positionArr = [];\n    let arr = [];\n    arr = this.value.split(\"\");\n    for (let i = 0; i < arr.length; i++) {\n      for (let j = 0; j < 4; j++) {\n        for (let k = 0; k < this.KEYBOARD[j].length; k++) {\n          if (arr[i] === this.KEYBOARD[j][k]) {\n            positionArr.push([j, k]);\n          }\n        }\n      }\n    }\n    return positionArr;\n  }\n  toRightPattern() {\n    const rightPattern = [];\n    for (let i = 0; i < this.positionArr.length; i++) {\n      if (this.positionArr[i][1] > 5) {\n        rightPattern[i] = this.positionArr[i];\n      } else {\n        rightPattern[i] = undefined;\n      }\n    }\n    return rightPattern;\n  }\n  toLeftPattern() {\n    const leftPattern = [];\n    for (let i = 0; i < this.positionArr.length; i++) {\n      if (this.positionArr[i][1] <= 5) {\n        leftPattern[i] = this.positionArr[i];\n      } else {\n        leftPattern[i] = undefined;\n      }\n    }\n    return leftPattern;\n  }\n  allRightPatterns = () => {\n    const rightPattern = this.toRightPattern();\n    const allTheRightPatterns = [];\n    this.DIRS.forEach(dir => {\n      let subArr = [];\n      for (let i = 0; i < rightPattern.length; i++) {\n        if (rightPattern[i] === undefined) {\n          subArr[i] = undefined;\n        } else {\n          subArr[i] = [rightPattern[i][0] + dir[0], rightPattern[i][1] + dir[1]];\n        }\n      }\n      allTheRightPatterns.push(subArr);\n    });\n    return allTheRightPatterns;\n  };\n  allLeftPatterns = () => {\n    const leftPattern = this.toLeftPattern();\n    const allTheLeftPatterns = [];\n    this.DIRS.forEach(dir => {\n      let subArr = [];\n      for (let i = 0; i < leftPattern.length; i++) {\n        if (leftPattern[i] === undefined) {\n          subArr[i] = undefined;\n        } else {\n          subArr[i] = [leftPattern[i][0] + dir[0], leftPattern[i][1] + dir[1]];\n        }\n      }\n      allTheLeftPatterns.push(subArr);\n    });\n    return allTheLeftPatterns;\n  };\n  allPatternsCompiled() {\n    const alp = this.allLeftPatterns();\n    const arp = this.allRightPatterns();\n    const allPatternsBothHands = [];\n    for (let i = 0; i < alp.length; i++) {\n      for (let j = 0; j < alp.length; j++) {\n        let innerArray = [];\n        for (let k = 0; k < alp[0].length; k++) {\n          if (alp[i][k] !== undefined) {\n            innerArray.push(alp[i][k]);\n          } else {\n            innerArray.push(arp[j][k]);\n          }\n        }\n        allPatternsBothHands.push(innerArray);\n      }\n    }\n    return allPatternsBothHands;\n  }\n  static patternToWord(pattern) {\n    const arr = [];\n    const alphabet = \"abcdefghijklmnopqrstuvwxyz \".split(\"\");\n    debugger;\n    let caps = false;\n    pattern.forEach(pos => {\n      const char = KEYBOARD[pos[0]][pos[1]];\n      debugger;\n      if (alphabet.includes(char)) {\n        arr.push(char);\n      }\n      ;\n    });\n    return arr.join(\"\");\n  }\n  allPossibleSloths() {\n    const allPatsCompiled = this.allPatternsCompiled();\n    const allWordsCompiled = [];\n    allPatsCompiled.forEach(pat => {\n      allWordsCompiled.push(Word.patternToWord(pat));\n    });\n    return allWordsCompiled;\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Word);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/word.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2NzcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zbGlwX29mX3RoZV9oYW5kLy4vc3JjL2luZGV4LnNjc3M/OTc0NSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB7fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;